# PATH updates
export PATH=$PATH:/Users/H59157/Downloads/google-cloud-sdk/bin
export PATH=$PATH:"/Applications/Visual Studio Code.app/Contents/Resources/app/bin"
export PATH=$PATH:/Users/H59157/Library/Python/3.8/bin

# Add other exports here

# Functions

pushd()
{
  if [ $# -eq 0 ]; then
    DIR="${HOME}"
  else
    DIR="$1"
  fi

  builtin pushd "${DIR}" > /dev/null
  #echo -n "DIRSTACK: "
  dirs
}

pushd_builtin()
{
  builtin pushd > /dev/null
  #echo -n "DIRSTACK: "
  dirs
}

popd()
{
  builtin popd > /dev/null
  #echo -n "DIRSTACK: "
  dirs
}

# Aliases
alias cat=bat
alias cdb='cd ~/'
alias cd='pushd'
alias ..='popd'
alias flip='pushd_builtin'
alias src='cd ~/src'

alias supercat='cat -e -t -v'

alias excel='open -a "Microsoft Excel"'
alias powerpnt='open -a "Microsoft PowerPoint"'
alias winword='open -a "Microsoft Word"'

alias tfi='terraform init'
alias tfp='terraform plan'
alias tfa='terraform apply -auto-approve'
alias macflush='sudo dscacheutil -flushcache;sudo killall -HUP mDNSResponder'

# Removes branches that no longer are being tracked
gitrmlb() { git branch -r | awk '{print $1}' | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk '{print $1}' | xargs git branch -d; }
gitlsbr() { git branch -r | awk '{print $1}' | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk '{print $1}' }

# Run whatever commands you want on all folders in $1/aws-voyager*
gitrunner() { find $1 -type d -depth 1 -name "aws-voyager*" -print -exec git --git-dir={}/.git "${@:2}" \; }

# List all unmerged branches for every repo under $1/aws-voyager*
gitlsbrnomerged() { find $1 -type d -depth 1 -name "aws-voyager*" -print -exec git --git-dir={}/.git branch --no-merge origin/dev -r \; }

# List all merged branches for every repo under $1/aws-voyager*
gitlsbrmerged() { find $1 -type d -depth 1 -name "aws-voyager*" -print -exec git --git-dir={}/.git branch --no-merge origin/dev -r \; }

# Remove all local branches without remote tracker under $1/aws-voyager*
gitfprune() { find $1 -type d -depth 1 -name "aws-voyager*" -print -exec git --git-dir={}/.git fetch --prune origin \; }

# Needed to enable docker thru minikube
eval $(minikube docker-env)

